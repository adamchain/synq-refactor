import connect, { ConnectionPool, Connection, Transaction, Queryable, sql } from '@databases/pg';
import { Migration, MigrationsConfig } from './PostgresDatabaseEngine';
export type { Migration };
export type { ConnectionPool, Connection, Transaction, Queryable };
export { connect, sql };
export interface Parameters extends Partial<MigrationsConfig> {
    connection: ConnectionPool;
    migrationsDirectory: string;
}
declare const applyMigrations: (parameters: Parameters & import("@databases/migrations-base/lib/runCommand").RunCommandOptions<import("@databases/migrations-base/lib/types/MigrationError").default> & {
    ignoredErrors?: ("migration_file_missing" | "migration_file_edited" | "migration_order_change")[] | undefined;
}) => Promise<void>, ignoreError: (parameters: Parameters & import("@databases/migrations-base/lib/runCommand").RunCommandOptions<import("@databases/migrations-base/lib/types/MigrationError").default> & {
    migrationIndex: number;
    errorType: "migration_file_missing" | "migration_file_edited" | "migration_order_change";
}) => Promise<void>, markMigrationAsApplied: (parameters: Parameters & import("@databases/migrations-base/lib/runCommand").RunCommandOptions<import("@databases/migrations-base/lib/types/MigrationError").default> & {
    migrationIndex: number;
}) => Promise<void>, markMigrationAsUnapplied: (parameters: Parameters & import("@databases/migrations-base/lib/runCommand").RunCommandOptions<import("@databases/migrations-base/lib/types/MigrationError").default> & {
    migrationIndex: number;
}) => Promise<void>, restoreMigrationFromDatabase: (parameters: Parameters & import("@databases/migrations-base/lib/runCommand").RunCommandOptions<import("@databases/migrations-base/lib/types/MigrationError").default> & {
    migrationIndex: number;
}) => Promise<void>;
export { applyMigrations, ignoreError, markMigrationAsApplied, markMigrationAsUnapplied, restoreMigrationFromDatabase, };
