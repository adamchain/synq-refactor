import MigrationsContext from '../MigrationContext';
import DatabaseEngine from '../types/DatabaseEngine';
import Result from '../types/Result';
import { MigrationWithNoValidExport, ConcurrentMigrationsError } from '../types/MigrationError';
import Operation from '../types/Operation';
export default function applyOperations<TMigration>(ctx: MigrationsContext, engine: DatabaseEngine<TMigration>, logging: {
    beforeOperation: (operation: Operation) => Promise<void | 'stop' | 'rollback'>;
    afterOperation: (operation: Operation) => Promise<void>;
}): Promise<Result<void, MigrationWithNoValidExport | ConcurrentMigrationsError>>;
